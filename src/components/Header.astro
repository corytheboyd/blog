---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
---

<header>
  <div class="border-b border-gray-200">
    <nav class="-mb-px flex" aria-label="Tabs">
      <!-- HOME BUTTON -->
      <div class="flex-grow flex flex-row items-center">
        <a
          href="/blog"
          class="flex items-center justify-center space-x-2 title-container h-full home-button"
          data-home-button
        >
          <img
            src="/win98icon/entire_network_globe-5.png"
            class="w-8 h-8 home-icon-glow"
          />
          <h2
            class:list={[
              "font-mono text-sm italic transition-color",
              "text-gray-600 hover:text-gray-800",
              "dark:text-gray-200 dark:hover:text-gray-50",
            ]}
          >
            <span
              >{
                SITE_TITLE.split("").map((char, i) => (
                  <span data-index={i} class="letter-wrapper inline-block relative">
                    <span class="letter-shadow absolute left-0 top-0 pointer-events-none select-none">{char}</span>
                    <span class="letter relative z-10">{char}</span>
                  </span>
                ))
              }</span
            >
          </h2>
        </a>
      </div>

      <div class="flex">
        <HeaderLink href="/blog">Blog</HeaderLink>
        <HeaderLink href="/about">About</HeaderLink>
      </div>
    </nav>
  </div>
</header>

<style>
  :root {
    --letter-animation-duration: 0.45s;
    --letter-animation-delay: 20ms;
    --letter-bounce-height: -5px;
    --letter-animation-timing: cubic-bezier(0.4, 0, 0.2, 1);
  }

  @keyframes bounce {
    0%,
    100% {
      transform: translateY(0);
      text-shadow: 0 0px 0 rgba(0,0,0,0.15);
    }
    50% {
      transform: translateY(var(--letter-bounce-height));
      text-shadow: 0 14px 24px 4px rgba(0,0,0,0.45), 0 2px 8px rgba(0,0,0,0.25);
    }
  }

  .letter-bounce {
    animation: bounce var(--letter-animation-duration)
      var(--letter-animation-timing);
    animation-fill-mode: both;
    display: inline-block;
  }

  .letter-wrapper {
    position: relative;
    display: inline-block;
  }
  .letter-shadow {
    position: absolute;
    left: 0;
    top: 0;
    color: rgba(0,0,0,0.5);
    filter: blur(2px);
    transform: translateY(12px) scaleY(0.7);
    opacity: 0;
    pointer-events: none;
    z-index: 0;
    transition: transform var(--letter-animation-duration), opacity var(--letter-animation-duration);
  }
  .letter-bounce .letter-shadow {
    transform: translateY(20px) scaleY(0.9);
    opacity: 0.9;
  }
  .letter {
    position: relative;
    z-index: 1;
  }
</style>

<script>
  const buttons = document.querySelectorAll("[data-home-button]");
  buttons.forEach((button) => {
    let animationTimeouts: NodeJS.Timeout[] = [];

    function clearAllTimeouts() {
      animationTimeouts.forEach((timeout) => clearTimeout(timeout));
      animationTimeouts = [];
    }

    function startAnimation() {
      const wrappers = button.querySelectorAll<HTMLElement>("[data-index]");
      wrappers.forEach((wrapper, index) => {
        const timeout = setTimeout(
          () => {
            wrapper.style.animation = "none";
            wrapper.offsetHeight; // Trigger reflow
            wrapper.style.animation = `bounce var(--letter-animation-duration) var(--letter-animation-timing)`;
          },
          index *
            parseInt(
              getComputedStyle(document.documentElement).getPropertyValue(
                "--letter-animation-delay",
              ),
            ),
        );
        animationTimeouts.push(timeout);
      });
    }

    // Only animate on page load
    setTimeout(() => {
      startAnimation();
    }, 100);
  });
</script>
